[{"authors":null,"categories":null,"content":" Types of contributions Thanks for your interest in the Eclipse Keypop® project.\nThere are several ways to contribute to the project:\nPropose a fix for a problem that is already known or that you have identified. In this case you will have to notify the issue in the repository where the problem appeared and reference the issue in all the other repositories affected by the fix. Propose the creation of a new component. In this case you will first have to create an issue in the repository https://github.com/eclipse-keypop to justify the need and request the creation of a new repository, wait for the issue to be resolved by the decision of the committers, and then create an issue in the new repository signifying the start of development of the new component. Eclipse Contributor Agreement Before your contribution can be accepted by the project team contributors must electronically sign the Eclipse Contributor Agreement (ECA).\nhttp://www.eclipse.org/legal/ECA.php Commits that are provided by non-committers must have a Signed-off-by field in the footer indicating that the author is aware of the terms by which the contribution has been provided to the project. The non-committer must additionally have an Eclipse Foundation account and must have a signed Eclipse Contributor Agreement (ECA) on file.\nFor more information, please see the Eclipse Committer Handbook: https://www.eclipse.org/projects/handbook/#contributing\nContributing via fork Check if there is already a GitHub issue for what you want to work on or create one. Announce in the comments section that you want to work on the issue. Also describe the solution you want to implement. To improve the chances for your contribution to be accepted, you’ll want to wait for the feedback of the committers. Fork the repository. Create a new branch from main for your changes. Name it after the issue number, e.g. #XXX_[description_of_changes]. Implement your changes. Rebase on main. Run ./gradlew spotlessApply to format the code and add licence headers to the files. Run ./gradlew build (to check code formatting and run tests) Commit your changes using the -s flag in order to add a Signed-off-by footer as mentioned above and use the same email address you are using for your GitHub account.\nUse commits messages that respect the commits message conventions. Push your changes to your forked repository. Submit a pull request referencing the related issue(s). After submitting, do not use your branch for any other development, otherwise further changes that you make will be visible in the PR. Contributing as a project committer Check if there is already a GitHub issue for what you want to work on or create one. Assign the issue to yourself. Create a new branch from main for your changes. Name it after the issue number, e.g. #XXX_[description_of_changes]. Implement your changes. Rebase on main. Run ./gradlew spotlessApply to format the code and add licence headers to the files. Run ./gradlew build (to check code formatting and run tests) Commit your changes. Use commits messages that respect the commits message conventions. Push the branch into the repository. Submit a pull request and ask somebody who is familiar with the code you modified to review it. If the reviewer approves and all checks are OK, merge using squash \u0026amp; commit method. Commits message conventions In order to ensure good readability of the commit history, it is necessary to have consistency in the structure of the commit messages.\nTherefore, all contributors to the project are asked to respect the structure of the commits messages as described in the guide Conventional Commits 1.0.0:\n\u0026lt;type\u0026gt;[optional scope]: \u0026lt;description\u0026gt; [optional body] \u0026lt;footer(s)\u0026gt; Furthermore, it is requested to indicate in the footer section the associated issue(s) that will be closed (Closes #xxx, closes #yyy, etc...). This will automatically close the associated issue(s) when the pull request is validated (see GitHub Docs for more details).\nIt is also required to indicate possible references to other associated issues (Refs: #aaa, #bbbb, repository_owner/other_repository_name#ccc, etc...).\nHere is fictive example:\nfeat(observation): allow asynchronous notification of reader events Add a public method in the observable reader to enable asynchronous notifications. Closes #34, closes #38 Refs: #12, eclipse-keypop/keypop-website#54 ","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1693581209,"objectID":"03b6ed671df847a7fe95d07d922cdb1a","permalink":"https://keypop.org/community/contributing/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/community/contributing/","section":"community","summary":"Find out how to contribute to the Keypop project and how it can benefit your organization.","tags":null,"title":"How to contribute to Eclipse Keypop® project","type":"book"},{"authors":null,"categories":null,"content":" This page serves as a centralized hub, bringing a dynamic chronological overview that showcases the progress and updates across all Keypop components repositories. Date Component 2024-04-17Keypop Calypso Crypto Legacysam Java Api0.6.0Added New method added to LegacySamSelectionExtension: prepareGetData(GetDataTag tag) to schedule the execution of a “Get Data” command for the specified tag. Changed CardCertificateComputationData renamed to LegacyCardCertificateComputationData 2024-04-12Keypop Calypso Crypto Legacysam Java Api0.5.0Changed Java source and target levels 1.6 -\u0026gt; 1.8 Upgraded Gradle 6.8.3 -\u0026gt; 7.6.4 Added GetDataTag to enumerate all output data types. KeyPairContainer interface to contain a key pair. CardCertificateComputationData interface to contain input/output data for the “PSO Compute Certificate” command. New methods added to FreeTransactionManager: prepareGetData(GetDataTag tag) to schedule the execution of a “Get Data” command for the specified tag. prepareGenerateCardAsymmetricKeyPair(KeyPairContainer keyPairContainer) to schedule the execution of “Card Generate Asymmetric Key Pair” command. prepareComputeCardCertificate(CardCertificateComputationData data) to schedule the execution of a “PSO Compute Certificate” command. New methods added to LegacySamApiFactory: createKeyPairContainer() to create a new instance of KeyPairContainer. createCardCertificateComputationData() to create a new instance of CardCertificateComputationData. New method added to LegacySam: getCaCertificate() to get the CA certificate retrieved from the SAM as a 384-byte byte array. 2024-04-12Keypop Calypso Card Java Api2.1.0Changed Java source and target levels 1.6 -\u0026gt; 1.8 Upgraded Gradle 6.8.3 -\u0026gt; 7.6.4 Keypop Reader API 2.0.0 -\u0026gt; 2.0.1 (code source not impacted) Added Support for PKI cards New APIs dedicated to the card personalization: added PutDataTag enum added preparePutData(PutDataTag tag, byte[] data) method to TransactionManager added prepareGenerateAsymmetricKeyPair() method to TransactionManager added CARD_PUBLIC_KEY, CARD_CERTIFICATE, CA_CERTIFICATE entries to GetDataTag enum added getCardPublicKey(), getCardCertificate(), getCaCertificate() methods to CalypsoCard New APIs/SPIs dedicated to the card secure transaction in PKI mode: added SPIs to operate the involved certificates with an external library: PcaCertificate, CaCertificate, CaCertificateParser, CardCertificate, CardCertificateParser added AsymmetricCryptoSecuritySetting interface added createAsymmetricCryptoSecuritySetting(...) method to CalypsoCardApiFactory added SecurePkiModeTransactionManager interface added createSecurePkiModeTransactionManager(...) method to CalypsoCardApiFactory added InvalidCertificateException 2024-04-12Keypop Calypso Crypto Symmetric Java Api0.1.1Changed Java source and target levels 1.6 -\u0026gt; 1.8 Upgraded Gradle 6.8.3 -\u0026gt; 7.6.4 2024-04-12Keypop Card Java Api2.0.1Changed Java source and target levels 1.6 -\u0026gt; 1.8 Upgraded Gradle 6.8.3 -\u0026gt; 7.6.4 2024-04-12Keypop Reader Java Api2.0.1Changed Java source and target levels 1.6 -\u0026gt; 1.8 Upgraded Gradle 6.8.3 -\u0026gt; 7.6.4 2024-01-10Keypop Calypso Crypto Legacysam Java Api0.4.0Added LegacySamStaticUnlockDataProviderSpi, an SPI to provide SAM unlock data in static mode. LegacySamDynamicUnlockDataProviderSpi, an SPI to provide SAM unlock data in dynamic mode. New methods added to LegacySamSelectionExtension: setStaticUnlockDataProvider(LegacySamStaticUnlockDataProviderSpi unlockDataProvider) sets the unlock data provider for the static mode when the card reader becomes available at a later stage. setStaticUnlockDataProvider(LegacySamStaticUnlockDataProviderSpi unlockDataProvider, CardReader targetSamReader) sets the unlock data provider and the target SAM reader for the static mode when the target SAM reader is initially available. setDynamicUnlockDataProvider(LegacySamDynamicUnlockDataProviderSpi unlockDataProvider) sets the unlock data provider for the dynamic mode when the card reader becomes available at a later stage. setDynamicUnlockDataProvider(LegacySamDynamicUnlockDataProviderSpi unlockDataProvider, CardReader targetSamReader) sets the unlock data provider and the target SAM reader for the dynamic mode when the target SAM reader is initially available. Fixed The allowed length for unlocking data in static mode is 16 bytes only as expected by the SAM (setUnlockData method). 2023-11-27Keypop Calypso Crypto Legacysam Java Api0.3.0⚠️ The project has been migrated from the Calypsonet Terminal Calypso Crypto Legacy SAM API GitHub repository.\nAdded LegacySamApiFactory centralizes the methods used to create instances of the various interfaces of the API. CardTransactionLegacySamExtension extends the SPI CardTransactionCryptoExtension provided by “Keypop Calypso Card API” to extends a card transaction with specific SAM features (e.g. signature computation, etc.). New methods added to LegacySamSelectionExtension: setUnlockData(String unlockData, LegacySam.ProductType productType) sets the unlock …","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1693581209,"objectID":"9df4882bff6799b05e0bb341234f8f66","permalink":"https://keypop.org/community/changelog/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/community/changelog/","section":"community","summary":"This page serves as a centralized hub, bringing a dynamic chronological overview that showcases the progress and updates across all Keypop components repositories.","tags":null,"title":"Changelog","type":"book"},{"authors":null,"categories":null,"content":"\nThe Keypop Reader layer APIs follow the architecture described by the CNA Reader layer specifications.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1714983827,"objectID":"93f0944cacf001cbfb2880d7846ea0a3","permalink":"https://keypop.org/apis/reader-layer/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/reader-layer/","section":"apis","summary":"The Keypop Reader layer APIs follow the architecture described by the CNA Reader layer specifications.","tags":null,"title":"Reader Layer APIs","type":"book"},{"authors":null,"categories":null,"content":"\nThe Keypop Calypso layer APIs follow the architecture described by the CNA Calypso layer specifications.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1714983827,"objectID":"bec719851bec845246ff9e81f9b9479a","permalink":"https://keypop.org/apis/calypso-layer/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/calypso-layer/","section":"apis","summary":"The Keypop Calypso layer APIs follow the architecture described by the CNA Calypso layer specifications.","tags":null,"title":"Calypso Layer APIs","type":"book"},{"authors":null,"categories":null,"content":"\nKeypop offers a set of interfaces based on the specifications from the Calypso Networks Association, for the creation of software components dedicated to the management of smart card readers and smart card applications.\nThis section lists the APIs associated to the Reader \u0026amp; Calypso layers.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1714983827,"objectID":"43c0c4121ee50066f7d192a6504d86bf","permalink":"https://keypop.org/apis/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/","section":"apis","summary":"Keypop offers a set of interfaces based on the specifications from the Calypso Networks Association, for the creation of software components dedicated to the management of smart card readers and smart card applications.","tags":null,"title":"Keypop APIs","type":"book"},{"authors":null,"categories":null,"content":" Contributing Find out how to contribute to the Keypop project and how it can benefit your organization.\nChangelog This page serves as a centralized hub, bringing a dynamic chronological overview that showcases the progress and updates across all Keypop components repositories.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1693581209,"objectID":"460964d71a5606848132aa51ae04f454","permalink":"https://keypop.org/community/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/community/","section":"community","summary":"Contributing Find out how to contribute to the Keypop project and how it can benefit your organization.\nChangelog This page serves as a centralized hub, bringing a dynamic chronological overview that showcases the progress and updates across all Keypop components repositories.","tags":null,"title":"Community","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog As part of the Card Layer, the Calypso Card API provides high-level functionality for selecting and performing transactions with Calypso cards.\nJava implementation Latest version 2.1.0 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-calypso-card-java-api:2.1.0\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-calypso-card-java-api:2.1.0\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-calypso-card-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.1.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 2.0.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"7ca54d5d1e32e5e324c46c102bd49bc2","permalink":"https://keypop.org/apis/calypso-layer/calypso-card-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/calypso-layer/calypso-card-api/","section":"apis","summary":"Public high-level API which standardizes the way to interact with a Calypso® product (card, NFC smartphone applet/application, SAM, etc...).","tags":null,"title":"Calypso Card API (external)","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog As part of the Reader Layer, the Reader API provides high-level functionality for identifying, monitoring, configuring readers and process card selection scenarios.\nJava implementation Latest version 2.0.1 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-reader-java-api:2.0.1\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-reader-java-api:2.0.1\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-reader-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 2.0.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"f944a0c90eeb88534cf999c1fe9bf563","permalink":"https://keypop.org/apis/reader-layer/reader-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/reader-layer/reader-api/","section":"apis","summary":"Public API which defines the elements shared by the reader.","tags":null,"title":"Reader API (external)","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog As part of the Reader Layer, the Card API defines the internal elements shared by the reader layer to implement specific card layers (like the Calypso Card layer).\nJava implementation Latest version 2.0.1 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-card-java-api:2.0.1\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-card-java-api:2.0.1\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-card-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 2.0.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"e2bdda8bb87505322c86726adff1e6c2","permalink":"https://keypop.org/apis/reader-layer/card-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/reader-layer/card-api/","section":"apis","summary":"Internal API which defines the elements shared between the reader layer and the card layer.","tags":null,"title":"Card API (internal)","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog As part of the Card Layer, the Calypso Crypto Legacy SAM API provides high-level functionality for selecting and performing transactions with Calypso Legacy SAMs and can also be coupled with the Calypso Card API to handle the cryptographic calculations required for Calypso card transactions secured by symmetric keys.\nJava implementation Latest version 0.6.0 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-calypso-crypto-legacysam-java-api:0.6.0\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-calypso-crypto-legacysam-java-api:0.6.0\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-calypso-crypto-legacysam-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.6.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 0.6.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"7e2898f2efd8df8f8eb74c6576e811a9","permalink":"https://keypop.org/apis/calypso-layer/calypso-legacysam-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/calypso-layer/calypso-legacysam-api/","section":"apis","summary":"Public high-level API which standardizes the way to interact with a Calypso® legacy SAM product (SAM-C1, HSM-C1, etc...).","tags":null,"title":"Calypso Legacy SAM API (external)","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog The Calypso Crypto Symmetric API is the communication interface between the Calypso Card and the Calypso Symmetric Crypto libraries.\nJava implementation Latest version 0.1.1 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-calypso-crypto-symmetric-java-api:0.1.1\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-calypso-crypto-symmetric-java-api:0.1.1\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-calypso-crypto-symmetric-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.1.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 0.1.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"d075c42c9c6f27441c4fba25a010ff7a","permalink":"https://keypop.org/apis/calypso-layer/calypso-symmetric-crypto-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/calypso-layer/calypso-symmetric-crypto-api/","section":"apis","summary":"Internal API which defines the elements shared between the Calypso Card and the Calypso Symmetric Crypto libraries.","tags":null,"title":"Calypso Symmetric Crypto API (internal)","type":"book"},{"authors":null,"categories":null,"content":" UML class diagram Design guide Changelog The Calypso Crypto Asymmetric API is the communication interface between the Calypso Card and the Calypso Asymmetric Crypto libraries.\nJava implementation Latest version 0.2.0 API documentation GitHub repository All deliverables are available directly from the Maven Central Repository or by using one of the project resource managers below:\nGradle Kotlin Gradle Groovy Maven Copy implementation(\u0026#34;org.eclipse.keypop:keypop-calypso-crypto-asymmetric-java-api:0.2.0\u0026#34;) implementation \u0026#39;org.eclipse.keypop:keypop-calypso-crypto-asymmetric-java-api:0.2.0\u0026#39; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.eclipse.keypop\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;keypop-calypso-crypto-asymmetric-java-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.2.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; C++ implementation Latest version 0.2.0 API documentation GitHub repository ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730711060,"objectID":"cc523e31b078bd10e54608707846598a","permalink":"https://keypop.org/apis/calypso-layer/calypso-asymmetric-crypto-api/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/apis/calypso-layer/calypso-asymmetric-crypto-api/","section":"apis","summary":"Internal API which defines the elements shared between the Calypso Card and the Calypso Asymmetric Crypto libraries.","tags":null,"title":"Calypso Asymmetric Crypto API (internal)","type":"book"}]